{"version":3,"sources":["hooks/useEffectOnce.ts","utils/index.ts","store/main/actions.ts","styles/index.ts","store/main/reducer.ts","store/main/utils.ts","components/Checkbox.tsx","screens/dashboard/positions/PositionsList.tsx","screens/dashboard/positions/ClosedPositionsList.tsx","components/Popup.tsx","screens/dashboard/positions/Position.tsx","screens/dashboard/positions/ComparePositions.tsx","screens/dashboard/positions/OpenPositionsList.tsx","screens/dashboard/positions/SelectedPosition.tsx","components/Switch.tsx","screens/dashboard/positions/TogglePositions.tsx","screens/dashboard/positions/index.tsx","components/PieChart/index.tsx","screens/dashboard/status/mock-data.ts","screens/dashboard/status/index.tsx","screens/dashboard/index.tsx","config.ts","screens/login/index.tsx","App.tsx","reportWebVitals.ts","store/store.ts","theme.ts","index.tsx"],"names":["useEffectOnce","func","ref","useRef","useEffect","current","delay","ms","Promise","res","setTimeout","getOpenPositions","result","Array","from","length","map","e","index","text","id","uuidv4","getClosedPositions","getPositions","createAsyncThunk","all","open","closed","StyledMainGrid","styled","Box","maxWidth","width","marginLeft","marginRight","StyledScreen","paddingTop","StyledSkeleton","Skeleton","initialState","openPositions","closedPositions","selectedPosition","positionsLoading","error","undefined","comparePositionsIds","compareMode","showOpenPositions","showCompare","comparePositions","MainSlice","createSlice","name","reducers","setShowCompare","state","action","payload","arr","positions","forEach","p","includes","push","getPositionsById","setShowOpenPositions","toggleCompareMode","selectPosition","addToCompare","filter","m","clearCompare","extraReducers","builder","addCase","fulfilled","rejected","message","pending","actions","useMainStore","useSelector","main","StyledContainer","Checkbox","checked","onChange","stopPropagation","target","overflow","height","StyledList","List","gap","display","flexDirection","StyledListLoader","ListItem","paddingBottom","PositionListItem","position","dispatch","useDispatch","isSelected","useMemo","StyledListItem","onClick","selected","val","ListItemText","Typography","border","background","PositionsList","loading","_","style","ClosedPositionsList","Popup","children","onClose","transparent","hideCloseBtn","title","Dialog","PaperProps","elevation","padding","BackdropProps","backgroundColor","boxShadow","StyledClose","IconButton","color","ClickAwayListener","onClickAway","StyledContent","StyledTitle","fontSize","fontWeight","textAlign","marginBottom","top","right","Paper","flex","PositionView","ComparePositions","Position","OpenPositionsList","SelectedPosition","alignItems","transform","Switch","label","TogglePositions","value","StyledFlex","Positions","externalTooltipHandler","context","amounts","console","log","chart","tooltip","tooltipEl","canvas","parentNode","querySelector","document","createElement","borderRadius","opacity","pointerEvents","transition","table","margin","appendChild","getOrCreateTooltip","body","data","dataPoints","dataIndex","percent","formattedValue","elem","toLocaleString","innerHTML","positionX","offsetLeft","positionY","offsetTop","left","caretX","caretY","font","options","bodyFont","string","ChartJS","register","ArcElement","Tooltip","Legend","borderColor","PieChart","labels","datasetData","plugins","enabled","external","datasets","borderWidth","assets","amount","markets","tvl","apy","wallets","chains","protocols","justifyContent","StyledBox","StyledBoxRow","BaseStatusBox","useState","showPieChart","setShowPieChart","percents","MarketValueStatusBox","wallet","Status","Dashboard","env","process","Login","clientId","buttonText","onSuccess","onFailure","cookiePolicy","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","mainReducer","theme","createTheme","palette","typography","fontFamily","ReactDOM","createRoot","getElementById","render","StrictMode","getLibrary","provider","pollingInterval","Web3","ThemeProvider","CssBaseline","maxSnack"],"mappings":"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","file":"static/js/main.656c7a6b.chunk.js","sourcesContent":["import { useEffect, useRef } from \"react\";\n\nfunction useEffectOnce(func: () => void) {\n  const ref = useRef(false);\n\n  useEffect(() => {\n    if (ref.current) {\n      return;\n    }\n    func();\n    ref.current = true;\n  }, []);\n}\nexport default useEffectOnce;\n","export const delay = (ms: number) => new Promise((res) => setTimeout(res, ms));\n\n\n","import { createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { delay } from \"utils\";\nimport { Position } from \"./types\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst getOpenPositions = async () => {\n  await delay(1000);\n  const result = Array.from({ length: 50 });\n  return result.map((e, index) => {\n    return {\n      text: `open position-${index}`,\n      index,\n      id: uuidv4(),\n    };\n  });\n};\n\nconst getClosedPositions = async () => {\n  await delay(1000);\n  const result = Array.from({ length: 50 });\n  return result.map((e, index) => {\n    return {\n      text: `closed position-${index}`,\n      index,\n      id: uuidv4(),\n    };\n  });\n};\n\nexport const getPositions = createAsyncThunk<{\n  closed: Position[];\n  open: Position[];\n}>(\"main/getPositions\", async () => {\n  const [open, closed] = await Promise.all([\n    getOpenPositions(),\n    getClosedPositions(),\n  ]);\n  return { open, closed };\n});\n","import { Box } from \"@mui/material\";\nimport { styled } from \"@mui/system\";\nimport Skeleton from '@mui/material/Skeleton';\n\nexport const APP_GRID = 1400\nexport const LG_PADDING = 50\nexport const SM_PADDING = 20\n\n\nexport const StyledMainGrid = styled(Box)({\n    maxWidth: APP_GRID,\n    width: `calc(100% - ${LG_PADDING}px)`,\n    marginLeft:'auto',\n    marginRight:'auto'\n})\n\n\nexport const StyledScreen = styled(StyledMainGrid)({\n        paddingTop: 100\n})\n\n\nexport const StyledSkeleton = styled(Skeleton)({\n\n})","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../store\";\nimport { getPositions } from \"./actions\";\nimport { Position, State } from \"./types\";\nimport { getPositionsById } from \"./utils\";\n\nconst initialState = {\n  openPositions: [],\n  closedPositions: [],\n  selectedPosition: null,\n  positionsLoading: false,\n  error: undefined,\n  comparePositionsIds: [],\n  compareMode: false,\n  showOpenPositions: true,\n  showCompare: false,\n  comparePositions: [],\n} as State;\n\nconst MainSlice = createSlice({\n  name: \"main\",\n  initialState,\n  reducers: {\n    setShowCompare(state, action: PayloadAction<boolean>) {\n      state.showCompare = action.payload;\n      if (action.payload) {\n        state.comparePositions = getPositionsById(state.comparePositionsIds, [\n          ...state.openPositions,\n          ...state.closedPositions,\n        ]);\n      } else {\n        state.comparePositions = [];\n        state.comparePositionsIds = [];\n      }\n    },\n    setShowOpenPositions(state, action: PayloadAction<boolean>) {\n      state.showOpenPositions = action.payload;\n    },\n    toggleCompareMode(state, action: PayloadAction<boolean>) {\n      state.compareMode = action.payload;\n      if (!action.payload) {\n        state.comparePositionsIds = [];\n      }\n    },\n    selectPosition(state, action: PayloadAction<Position>) {\n      state.selectedPosition = action.payload;\n    },\n\n    addToCompare(state, action: PayloadAction<string>) {\n      if (state.comparePositionsIds.includes(action.payload)) {\n        state.comparePositionsIds = state.comparePositionsIds.filter(\n          (m) => m !== action.payload\n        );\n      } else {\n        state.comparePositionsIds.push(action.payload);\n      }\n    },\n    clearCompare(state, action: PayloadAction<string>) {\n      state.comparePositionsIds = [];\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getPositions.fulfilled, (state, { payload }) => {\n      state.positionsLoading = false;\n      state.openPositions = payload.open;\n      state.closedPositions = payload.closed;\n    });\n    builder.addCase(getPositions.rejected, (state, { error }) => {\n      state.positionsLoading = false;\n      state.error = error.message;\n    });\n    builder.addCase(getPositions.pending, (state, { payload }) => {\n      state.positionsLoading = true;\n    });\n  },\n});\n\nexport const {\n  selectPosition,\n  addToCompare,\n  clearCompare,\n  toggleCompareMode,\n  setShowOpenPositions,\n  setShowCompare\n} = MainSlice.actions;\n\nexport function useMainStore(): State {\n  const data = useSelector((state: RootState) => state.main);\n\n  return data;\n}\n\nexport default MainSlice.reducer;\n","import { Position } from \"./types\";\n\nexport const getPositionsById = (arr: string[], positions: Position[]) => {\n  const result: Position[] = [];\n\n  positions.forEach((p) => {\n    if (arr.includes(p.id)) {\n      result.push(p);\n    }\n  });\n\n  return result;\n};\n","import React from \"react\";\nimport MuiCheckbox from \"@mui/material/Checkbox\";\nimport { Box, styled } from \"@mui/system\";\n\nconst StyledContainer = styled(Box)({});\n\ninterface Props {\n  checked: boolean;\n  onChange: (value: boolean) => void;\n}\n\nfunction Checkbox({ checked, onChange }: Props) {\n\n    const change = (e: React.ChangeEvent<HTMLInputElement>) => {\n        e.stopPropagation()\n        onChange(e.target.checked)\n    }\n\n  return (\n    <StyledContainer>\n      <MuiCheckbox\n        checked={checked}\n        onChange={change}\n      />\n    </StyledContainer>\n  );\n}\n\nexport default Checkbox;\n","import React, { useMemo } from \"react\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport { Box } from \"@mui/system\";\nimport { Theme, Typography } from \"@mui/material\";\nimport { addToCompare, selectPosition, useMainStore } from \"store/main/reducer\";\nimport { useDispatch } from \"react-redux\";\nimport { styled } from \"@mui/system\";\nimport { Position } from \"store/main/types\";\nimport { StyledSkeleton } from \"styles\";\nimport Checkbox from \"components/Checkbox\";\n\nconst StyledContainer = styled(Box)({\n  width: 300,\n  overflow: \"auto\",\n  height: \"100%\",\n});\n\nconst StyledList = styled(List)({\n  gap: 20,\n  display: \"flex\",\n  flexDirection: \"column\",\n});\n\ninterface Props {\n  positions: Position[];\n  loading: boolean;\n}\n\nconst StyledListLoader = styled(ListItem)({\n  paddingTop: 0,\n  paddingBottom: 0,\n});\n\nfunction PositionsList({ positions, loading }: Props) {\n  return (\n    <StyledContainer>\n      <StyledList>\n        {loading\n          ? Array.from({ length: 4 }).map((_, index) => {\n              return (\n                <StyledListLoader key={index}>\n                  <StyledSkeleton style={{ width: \"100%\", height: 40 }} />\n                </StyledListLoader>\n              );\n            })\n          : positions.map((position) => {\n              return (\n                <PositionListItem key={position.index} position={position} />\n              );\n            })}\n      </StyledList>\n    </StyledContainer>\n  );\n}\n\ninterface PositionListItemProps {\n  position: Position;\n}\n\nconst PositionListItem = ({ position }: PositionListItemProps) => {\n  const { text, id } = position;\n  const { selectedPosition, compareMode, comparePositionsIds } = useMainStore();\n  const dispatch = useDispatch();\n  const isSelected = useMemo(\n    () => id === selectedPosition?.id,\n    [selectedPosition]\n  );\n\n  const select = () => {\n    if (!compareMode) {\n      dispatch(selectPosition(position));\n    }\n  };\n\n  const onCompare = (val: boolean) => {\n    dispatch(addToCompare(id));\n  };\n\n  return (\n    <StyledListItem onClick={select} selected={isSelected}>\n      {compareMode && (\n        <Checkbox\n          checked={comparePositionsIds.includes(id)}\n          onChange={onCompare}\n        />\n      )}\n      <ListItemText>\n        <Typography>{text}</Typography>\n      </ListItemText>\n    </StyledListItem>\n  );\n};\n\ntype StyledListItemProps = {\n  selected: boolean;\n};\n\nconst StyledListItem = styled(ListItem)<StyledListItemProps>(\n  ({ selected }) => ({\n    border: \"1px solid black\",\n    background: selected ? \"rgba(0,0,0, 0.4)\" : \"unset\",\n  })\n);\nexport default PositionsList;\n","import { useMainStore } from \"store/main/reducer\";\nimport PositionsList from \"./PositionsList\";\n\nfunction ClosedPositionsList() {\n  const { closedPositions, positionsLoading, showOpenPositions } = useMainStore();\n  if (showOpenPositions) {\n    return null;\n  }\n\n  return (\n    <PositionsList loading={positionsLoading} positions={closedPositions} />\n  );\n}\n\nexport default ClosedPositionsList;\n","import * as React from \"react\";\nimport Dialog from \"@mui/material/Dialog\";\nimport { ClickAwayListener, IconButton, Typography } from \"@mui/material\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { Box, styled } from \"@mui/system\";\n\nexport interface Props {\n  open: boolean;\n  children: React.ReactNode;\n  onClose: () => void;\n  transparent?: boolean;\n  id?: string;\n  maxWidth?: number;\n  hideCloseBtn?: boolean;\n  title?: string;\n}\n\nconst Popup = ({\n  children,\n  open,\n  onClose,\n  transparent,\n  id,\n  hideCloseBtn,\n  maxWidth,\n  title\n}: Props) => {\n\n  return (\n    <Dialog\n      id={id}\n      onClose={onClose}\n      open={open}\n      PaperProps={{\n        elevation: 0,\n       style: {\n        maxWidth: maxWidth || \"unset\",\n        width: \"fit-content\",\n        padding: 20\n       }\n      }}\n      BackdropProps={{\n        style: !transparent\n          ? {}\n          : {\n              backgroundColor: \"transparent\",\n              boxShadow: \"none\",\n            },\n      }}\n    >\n      {!hideCloseBtn && (\n        <StyledClose>\n           <IconButton  onClick={onClose}>\n          <CloseIcon style={{ color: \"white\" }} />\n        </IconButton>\n        </StyledClose>\n      )}\n      <ClickAwayListener onClickAway={onClose}>\n        <StyledContent>\n        {title && <StyledTitle>{title}</StyledTitle>}\n         {children}\n        </StyledContent>\n      </ClickAwayListener>\n    </Dialog>\n  );\n};\n\nexport default Popup;\n\n\nconst StyledTitle = styled(Typography)({\n    fontSize: 24,\n    fontWeight: 500,\n    textAlign:'center',\n    marginBottom: 10\n})\n\nconst StyledClose = styled(Box)({\n    position:'fixed',\n    top:30,\n    right: 30\n})\n\nconst StyledContent = styled(Box)({\n    background:'white'\n})","import { Paper, Typography } from '@mui/material'\nimport { styled } from '@mui/system'\nimport { Position } from 'store/main/types'\n\nconst StyledContainer = styled(Paper)({\n    padding: 20,\n    flex:1,\n    overflow:'auto'\n})  \n\ninterface Props{\n    position?: Position | null\n}\n\nfunction PositionView({position}: Props) {\n\n  return (\n    <StyledContainer>\n        <Typography>{position?.text}</Typography>\n    </StyledContainer>\n  )\n}\n\nexport default PositionView","import { Box } from \"@mui/material\";\nimport Popup from \"components/Popup\";\nimport { useDispatch } from \"react-redux\";\nimport { setShowCompare, useMainStore } from \"store/main/reducer\";\nimport PositionView from \"./Position\";\n\n\n\nfunction ComparePositions() {\n  const { comparePositions, showCompare } = useMainStore();\n  const dispatch = useDispatch();\n\n  const close = () => {\n    dispatch(setShowCompare(false));\n  };\n\n  return (\n    <Popup open={showCompare} onClose={close}>\n      <Box>\n        {comparePositions.map((position) => {\n          return <PositionView position={position} />;\n        })}\n      </Box>\n    </Popup>\n  );\n}\n\nexport default ComparePositions;\n","import { useMainStore } from \"store/main/reducer\";\nimport PositionsList from \"./PositionsList\";\n\nfunction OpenPositionsList() {\n  const { openPositions, positionsLoading, showOpenPositions } = useMainStore();\n  if (!showOpenPositions) {\n    return null;\n  }\n\n  return <PositionsList loading={positionsLoading} positions={openPositions} />;\n}\n\nexport default OpenPositionsList;\n","import React from 'react'\nimport { useMainStore } from 'store/main/reducer'\nimport PositionView from './Position'\n\n\n\nfunction SelectedPosition() {\n    const {selectedPosition} = useMainStore()\n  return (\n    <PositionView position={selectedPosition} />\n  )\n}\n\nexport default SelectedPosition","import React from \"react\";\nimport MuiSwitch from \"@mui/material/Switch\";\nimport { Box, styled } from \"@mui/system\";\nimport { Typography } from \"@mui/material\";\n\nconst StyledContainer = styled(Box)({\n    display:'flex',\n    alignItems:'center',\n    gap:10,\n    \".MuiSwitch-root\":{\n        transform:'rotate(180deg)'\n    }\n});\n\ninterface Props {\n  label?: string;\n  checked: boolean;\n  onChange: (value: boolean) => void\n}\nfunction Switch({ label, checked, onChange }: Props) {\n  return (\n    <StyledContainer>\n    \n      <MuiSwitch onChange={(e) => onChange(e.target.checked)} checked={checked} />\n      {label &&  <Typography>{label}</Typography>}\n    </StyledContainer>\n  );\n}\n\nexport default Switch;\n","import { Box, styled } from \"@mui/system\";\nimport Switch from \"components/Switch\";\nimport React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { setShowCompare, setShowOpenPositions, toggleCompareMode, useMainStore } from \"store/main/reducer\";\n\nconst StyledContainer = styled(Box)({\n  marginBottom: 20,\n  display: \"flex\",\n  gap: 20,\n});\n\nfunction TogglePositions() {\n  const { showOpenPositions, compareMode, comparePositionsIds } = useMainStore();\n  const dispatch = useDispatch();\n\n  const onSwitchChange = (value: boolean) => {\n    dispatch(setShowOpenPositions(value));\n  };\n\n  const onCompareMode = (value: boolean) => {\n    dispatch(toggleCompareMode(value));\n  };\n\n  const onCompare = () => {\n    dispatch(setShowCompare(true))\n  }\n\n  return (\n    <StyledContainer>\n      <Switch\n        checked={showOpenPositions}\n        onChange={onSwitchChange}\n        label=\"Positions\"\n      />\n      <Switch checked={compareMode} onChange={onCompareMode} label=\"Compare\" />\n      {comparePositionsIds.length === 2 && (\n        <button onClick={onCompare}>Go</button>\n      )}\n    </StyledContainer>\n  );\n}\n\nexport default TogglePositions;\n","import { styled } from \"@mui/system\";\nimport { Box } from \"@mui/system\";\nimport ClosedPositions from \"./ClosedPositionsList\";\nimport ComparePositions from \"./ComparePositions\";\nimport OpenPositions from \"./OpenPositionsList\";\nimport SelectedPosition from \"./SelectedPosition\";\nimport TogglePositions from \"./TogglePositions\";\n\nconst StyledContainer = styled(Box)({\n  height: \"calc(100% - 280px)\",\n  display: \"flex\",\n  flexDirection: \"column\",\n});\n\nconst StyledFlex = styled(Box)({\n  display: \"flex\",\n  gap: 20,\n  flex: 1,\n  alignItems: \"stretch\",\n  height: \"100%\",\n});\n\n\nfunction Positions() {\n  return (\n    <StyledContainer>\n      <ComparePositions />\n    <TogglePositions />\n      <StyledFlex>\n        <OpenPositions />\n        <ClosedPositions />\n\n        <SelectedPosition />\n      </StyledFlex>\n    </StyledContainer>\n  );\n}\n\nexport default Positions;\n","import React from \"react\";\nimport {\n  Chart as ChartJS,\n  ArcElement,\n  Tooltip,\n  Legend,\n  ChartOptions,\n  PieControllerChartOptions,\n  Chart,\n} from \"chart.js\";\nimport { Pie } from \"react-chartjs-2\";\nimport Popup from \"../Popup\";\nimport './style.css'\n\nconst getOrCreateTooltip = (chart: any) => {\n  let tooltipEl = chart.canvas.parentNode.querySelector(\"div\");\n\n  if (!tooltipEl) {\n    tooltipEl = document.createElement(\"div\");\n    tooltipEl.style.background = \"rgba(0, 0, 0, 0.7)\";\n    tooltipEl.style.borderRadius = \"3px\";\n    tooltipEl.style.color = \"white\";\n    tooltipEl.style.opacity = 1;\n    tooltipEl.style.pointerEvents = \"none\";\n    tooltipEl.style.position = \"absolute\";\n    tooltipEl.style.transform = \"translate(-50%, 0)\";\n    tooltipEl.style.transition = \"all .1s ease\";\n\n    const table = document.createElement(\"table\");\n    table.style.margin = \"0px\";\n\n    tooltipEl.appendChild(table);\n    chart.canvas.parentNode.appendChild(tooltipEl);\n  }\n\n  return tooltipEl;\n};\n\nconst externalTooltipHandler = (context: any, amounts: number[]) => {\n  console.log(amounts);\n\n  // Tooltip Element\n  const { chart, tooltip } = context;\n  const tooltipEl = getOrCreateTooltip(chart);\n\n  // Hide if no tooltip\n  if (tooltip.opacity === 0) {\n    tooltipEl.style.opacity = 0;\n    return;\n  }\n\n  // Set Text\n  if (tooltip.body) {\n    const data = tooltip.dataPoints[0];\n    const index = data.dataIndex;\n    const percent = data.formattedValue;\n    const label = data.label;\n    console.log(tooltip.dataPoints[0]);\n\n    const elem = `<div class='custom-tooltip'>\n            <p>\n                ${label}\n            <p>\n            <p>\n            ${`${percent}%`}\n        <p>\n        <p>${amounts[index].toLocaleString()}</p>\n        </div>`;\n    tooltipEl.innerHTML = elem;\n    console.log(tooltipEl);\n    \n  }\n\n  const { offsetLeft: positionX, offsetTop: positionY } = chart.canvas;\n  // Display, position, and set styles for font\n  tooltipEl.style.opacity = 1;\n  tooltipEl.style.left = positionX + tooltip.caretX + \"px\";\n  tooltipEl.style.top = positionY + tooltip.caretY + \"px\";\n  tooltipEl.style.font = tooltip.options.bodyFont.string;\n  tooltipEl.style.padding = \"20px\";\n};\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nconst backgroundColor = [\n  \"rgba(255, 99, 132, 0.2)\",\n  \"rgba(54, 162, 235, 0.2)\",\n  \"rgba(255, 206, 86, 0.2)\",\n  \"rgba(75, 192, 192, 0.2)\",\n  \"rgba(153, 102, 255, 0.2)\",\n  \"rgba(255, 159, 64, 0.2)\",\n];\n\nconst borderColor = [\n  \"rgba(255, 99, 132, 1)\",\n  \"rgba(54, 162, 235, 1)\",\n  \"rgba(255, 206, 86, 1)\",\n  \"rgba(75, 192, 192, 1)\",\n  \"rgba(153, 102, 255, 1)\",\n  \"rgba(255, 159, 64, 1)\",\n];\n\ninterface Props {\n  labels: string[];\n  datasetData: number[];\n  amounts: number[];\n}\n\nexport function PieChart({ labels, datasetData, amounts }: Props) {\n  const options: any = {\n    plugins: {\n      tooltip: {\n        enabled: false,\n        position: \"nearest\",\n        external: (context: any) => externalTooltipHandler(context, amounts),\n      },\n    },\n  };\n\n  const data = {\n    labels,\n    datasets: [\n      {\n        label: \"# of Votes\",\n        data: datasetData,\n        backgroundColor,\n        borderColor,\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  return <Pie options={options} data={data} />;\n}\n","export const assets = [\n  {\n    name: \"USDC\",\n    percent: 50,\n    amount: 50000000,\n  },\n  {\n    name: \"BTC\",\n    percent: 20,\n    amount: 20000000,\n  },\n  {\n    name: \"ETH\",\n    percent: 18,\n    amount: 18000000,\n  },\n  {\n    name: \"BNB\",\n    percent: 5,\n    amount: 5000000,\n  },\n];\n\n\nexport const markets = {\n  title: \"Orbs Ltd. DEFI\",\n  tvl: 1000000,\n  apy: 15.6,\n  wallets: [\n    {\n      name: \"Wallet 1\",\n      chains: 3,\n    },\n    {\n      name: \"Wallet 2\",\n      chains: 1,\n    },\n    {\n      name: \"Wallet 3\",\n      chains: 4,\n    },\n  ],\n};\n\n\n\nexport const chains = [\n  {\n    name: \"Ethereum\",\n    percent: 50,\n    amount: 50000000,\n  },\n  {\n    name: \"BSC\",\n    percent: 20,\n    amount: 20000000,\n  },\n  {\n    name: \"Polygon\",\n    percent: 12,\n    amount: 12000000,\n  },\n  {\n    name: \"Avalanche\",\n    percent: 11,\n    amount: 1100000,\n  },\n];\n\n\nexport const protocols = [\n    {\n      name: \"Ethereum\",\n      percent: 50,\n      amount: 50000000,\n    },\n    {\n      name: \"BSC\",\n      percent: 20,\n      amount: 20000000,\n    },\n    {\n      name: \"Polygon\",\n      percent: 12,\n      amount: 12000000,\n    },\n    {\n      name: \"Avalanche\",\n      percent: 11,\n      amount: 1100000,\n    },\n  ];\n\n\nexport type Wallet = {\nname: string;\nchains: number;\n}\nexport type MarketsData = {\n    title: string; \n    tvl: number;\n    apy: number;\n    wallets: Wallet[]\n}\nexport type BaseStatusData =  {\n    name: string;\n    percent: number;\n    amount: number\n}","import { Paper, Typography } from \"@mui/material\";\nimport { Box, styled } from \"@mui/system\";\nimport { PieChart } from \"components/PieChart\";\nimport Popup from \"components/Popup\";\nimport { useState } from \"react\";\nimport {\n  assets,\n  BaseStatusData,\n  chains,\n  markets,\n  MarketsData,\n  protocols,\n} from \"./mock-data\";\n\nconst StyledContainer = styled(Box)({\n  display: \"flex\",\n  alignItems: \"stretch\",\n  justifyContent: \"space-between\",\n  gap: 30,\n  \"*\": {\n    fontSize: 14,\n  },\n});\n\nfunction Status() {\n  return (\n    <StyledContainer>\n      <MarketValueStatusBox data={markets} />\n      <BaseStatusBox data={assets} />\n      <BaseStatusBox data={chains} />\n      <BaseStatusBox data={protocols} />\n    </StyledContainer>\n  );\n}\n\nconst StyledBox = styled(Paper)({\n  display: \"flex\",\n  flexDirection: \"column\",\n  gap: 10,\n  padding: \"15px 20px\",\n  justifyContent: \"center\",\n  flex: 1,\n});\n\nconst StyledBoxRow = styled(Box)({});\n\ninterface Props {\n  data: BaseStatusData[];\n}\n\nconst BaseStatusBox = ({ data }: Props) => {\n  const [showPieChart, setShowPieChart] = useState(false);\n    const labels = data.map(m => m.name)\n    const percents= data.map(m => m.percent)\n    const amounts = data.map(m => m.amount)\n  return (\n    <StyledBox>\n        <button onClick={() => setShowPieChart(true)}>Pie</button>\n      <Popup open={showPieChart} onClose={() => setShowPieChart(false)}>\n        <PieChart amounts={amounts} labels={labels} datasetData={percents} />\n      </Popup>\n      {data.map((e) => {\n        const { name, percent, amount } = e;\n        return (\n          <StyledBoxRow>\n            <Typography>\n              {name}-{`${percent}%`}-${amount.toLocaleString()}\n            </Typography>\n          </StyledBoxRow>\n        );\n      })}\n    </StyledBox>\n  );\n};\n\nconst MarketValueStatusBox = ({ data }: { data: MarketsData }) => {\n  const { title, wallets, apy, tvl } = data;\n  return (\n    <StyledBox>\n      <Typography>{title}</Typography>\n      <Box>\n        {wallets.map((wallet) => {\n          const { name, chains } = wallet;\n          return <Typography>{`${name} (${chains} chains)`}</Typography>;\n        })}\n      </Box>\n      <Box>\n        <Typography>${tvl.toLocaleString()}</Typography>\n      </Box>\n      <Box>\n        <Typography>{apy} APY</Typography>\n      </Box>\n    </StyledBox>\n  );\n};\n\nexport default Status;\n","import { styled } from \"@mui/system\";\nimport useEffectOnce from \"hooks/useEffectOnce\";\nimport { useDispatch } from \"react-redux\";\nimport { getPositions } from \"store/main/actions\";\nimport { AppDispatch } from \"store/store\";\nimport { StyledScreen } from \"styles\";\nimport Positions from \"./positions\";\nimport Status from \"./status\";\n\nconst StyledContainer = styled(StyledScreen)({\n  display: \"flex\",\n  flexDirection: \"column\",\n  gap: 20,\n  height: \"100vh\",\n  paddingBottom: 30,\n});\n\nfunction Dashboard() {\n  const dispatch = useDispatch<AppDispatch>();\n\n  useEffectOnce(() => {    \n    dispatch(getPositions());\n  });\n\n  return (\n    <StyledContainer>\n      <Status />\n      <Positions />\n    </StyledContainer>\n  );\n}\n\nexport default Dashboard;\n","export const env =   {\n    googleClientId: process.env.REACT_APP_GOOGLE_CLIENT_ID\n}\n","import { useMainStore } from \"../../store/main/reducer\";\nimport { GoogleLogin } from \"react-google-login\";\nimport {env} from 'config'\nimport { styled } from \"@mui/system\";\nimport { StyledScreen } from \"styles\";\n\nconst StyledContainer = styled(StyledScreen)({\n\n})\n\nfunction Login() {\n  const value = useMainStore();\n  console.log(value);\n\n\n  return (\n    <StyledContainer>\n      <GoogleLogin\n        clientId={env.googleClientId!!}\n        buttonText=\"Login\"\n        onSuccess={() => console.log('success')}\n        onFailure={() => console.log('failure')}\n        cookiePolicy={\"single_host_origin\"}\n      />\n    </StyledContainer>\n  );\n}\n\nexport default Login;\n","import { Box, styled } from \"@mui/system\";\nimport { Route, Routes } from \"react-router-dom\";\nimport Dashboard from \"screens/dashboard\";\nimport Login from \"./screens/login\";\n\n\nconst StyledContainer = styled(Box)({\n \n})\n\nfunction App() {\n  return (\n    <StyledContainer>\n      <Routes>\n        <Route path=\"/login\" element={<Login />} /> \n        <Route path=\"/\" element={<Dashboard />} /> \n      </Routes>\n    </StyledContainer>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit';\nimport mainReducer from './main/reducer';\n\nconst store = configureStore({\n    reducer: {\n        main: mainReducer,\n    }\n});\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = any\n\nexport default store;\n","import { createTheme } from '@mui/material/styles';\n\nconst theme = createTheme({\n    palette: {\n      \n    },\n    typography: {\n        // Use the system font over Roboto.\n        fontFamily: 'Avenir Next, Roboto,\"Helvetica Neue\",Arial,sans-serif'\n    }\n});\n\nexport { theme };\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Web3ReactProvider } from \"@web3-react/core\";\nimport Web3 from \"web3\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\nimport { SnackbarProvider } from \"notistack\";\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport { theme } from \"./theme\";\nimport { CssBaseline } from \"@mui/material\";\n\n\n\nconst getLibrary = (provider: any) => {\n  provider.pollingInterval = 8000;\n  return new Web3(provider);\n};\n\nconst root = ReactDOM.createRoot(\n  document.getElementById(\"root\") as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        <Web3ReactProvider getLibrary={getLibrary}>\n          <ThemeProvider theme={theme}>\n            <CssBaseline />\n            <SnackbarProvider maxSnack={3}>\n              <App />\n            </SnackbarProvider>\n          </ThemeProvider>\n        </Web3ReactProvider>\n      </Provider>\n    </Router>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}